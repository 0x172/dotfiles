"
" Type :so % to refresh .vimrc after making changes
" Type :PluginInstall to update
"

if &compatible
  set nocompatible
end

filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

" Plugins to manage plugins. Pluginception?
Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-bundler'

""" Make Vim work like an IDE...Core plugins for me
"
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'christoomey/vim-tmux-runner.git'
Plugin 'christoomey/vim-run-interactive'
Plugin 'scrooloose/nerdtree'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'ervandew/supertab'
Plugin 'vim-scripts/tComment'
Plugin 'vim-scripts/HTML-AutoCloseTag'
Plugin 'jiangmiao/auto-pairs'
Plugin 'tpope/vim-fugitive' "Make git awesome
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'

""" Highlighting, syntax, etc for various Languages
"
Plugin 'scrooloose/syntastic' "Syntax Highlighting
Plugin 'mxw/vim-jsx' "Syntax Highlighting for JSX

Plugin 'pangloss/vim-javascript' "Requirement for mxw/vim-jsx
Plugin 'Slava/vim-spacebars'
Plugin 'groenewege/vim-less'


  " TODO: Fix whatever issue is causing error here
  " Plugin 'marijnh/tern_for_vim'
  Plugin 'lfilho/cosco.vim' "Adds a ; at the end of a line by pressing <leader> ;

""" Theme / Pretty stuff
"
Plugin 'altercation/vim-colors-solarized'
Plugin 'bling/vim-airline' "Awesome looking meta at bottom


""" Extras that I find useful
"
Plugin 'pbrisbin/vim-mkdir'

  " For this to work, you need to do:
  " npm install -g instant-markdown-d
Plugin 'suan/vim-instant-markdown'

  " Adds :Dash integration
Plugin 'rizzatti/dash.vim'

  " '%' matches html tags now
Plugin 'vim-scripts/matchit.zip'

  " Snippets ftw!
Plugin 'garbas/vim-snipmate'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'

Plugin 'honza/vim-snippets'
Plugin 'cmather/vim-meteor-snippets'
Plugin 'justinj/vim-react-snippets'

  " Make gists easily from Vim
Plugin 'mattn/gist-vim'
Plugin 'mattn/webapi-vim'

  " I LOVE vimiwki. Just Google it if you are curious :)
Plugin 'vimwiki/vimwiki'

" Plugins to get sessions to auto-save
" Plugin 'xolox/vim-session'
" Plugin 'xolox/vim-misc'


call vundle#end()
filetype on


""" PLUGIN RELATED TWEAKS
"

" Color scheme
syntax enable
let g:solarized_termcolors=16
set background=dark
colorscheme solarized

"Allow moving around between Tmux windows
nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>

"tmux integration
let g:tmux_navigator_no_mappings = 1
let g:tmux_navigator_save_on_switch = 1

"Open a tmux pane with Node
nnoremap <leader>node :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'node'}<cr>

" open a dash search for the keyword under cursor
nmap <silent><leader>d <Plug>DashSearch
nmap <leader>D :Dash!

map <silent> <C-n> :NERDTreeToggle<cr>
nnoremap <C-t> :call ToggleRelativeOn()<cr>

" Key mapping for Cosco.vim - space + ; to add semicolon or comma in Javascript or CSS
autocmd FileType javascript,css nnoremap <silent> <Leader>; :call cosco#commaOrSemiColon()<CR>
autocmd FileType javascript,css inoremap <silent> <Leader>; <c-o>:call cosco#commaOrSemiColon()<CR>

"Snippets
let g:snipMate.scope_aliases.javascript = 'javascript-react,javascript.d3,javascript-jquery'

" Syntastic won't hilight HTML unless you specify with :SyntasticCheck
" This is to deal with handlebars issues in meteor
let syntastic_mode_map = { 'passive_filetypes': ['html']  }

" Allow powerline symbols to show up
let g:airline_powerline_fonts = 1

" Set Vim Wiki to my Dropbox directory
let g:vimwiki_list = [{'path':'$HOME/Dropbox/vimwiki'}]

" Allow JSX format to work with regular js files
let g:jsx_ext_required = 0

" configure syntastic syntax checking to check on open as well as save
let g:syntastic_check_on_open=1
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]

" Index ctags from any project
map <Leader>ct :!ctags -R .<CR>

" Run commands that require an interactive shell
nnoremap <Leader>r :RunInInteractiveShell<space>

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  let g:ctrlp_working_path_mode = 'r'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

